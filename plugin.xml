<?xml version="1.0" encoding="UTF-8"?>
<plugin xmlns="http://apache.org/cordova/ns/plugins/1.0"
  xmlns:android="http://schemas.android.com/apk/res/android"
  id="cordova-plugin-push-baidu-2024"
  version="5.6.1">
  <name>BaiduPush</name>

  <js-module src="www/baiduPush.js" name="baiduPush">
    <clobbers target="baiduPush" />
  </js-module>

  <!-- android -->
  <platform name="android">
    <config-file target="res/xml/config.xml" parent="/*">
      <feature name="BaiduPush">
        <param name="android-package" value="com.cordova.plugins.push.baidu.BaiduPush" />
      </feature>
    </config-file>

    <config-file target="AndroidManifest.xml" parent="/*">
      <!-- Push service 运行需要的权限 -->
    <uses-permission android:name="android.permission.INTERNET" />
    <uses-permission android:name="android.permission.READ_PHONE_STATE" />
    <uses-permission android:name="android.permission.ACCESS_WIFI_STATE" />
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
    <uses-permission android:name="android.permission.VIBRATE" />
    <uses-permission android:name="android.permission.DISABLE_KEYGUARD" />
    <!-- 此处com.baidu.push.example要改成应用自己的包名 -->
    <uses-permission android:name="baidu.push.permission.WRITE_PUSHINFOPROVIDER.com.cordova.plugins.push.baidu" />
    <permission
        android:name="baidu.push.permission.WRITE_PUSHINFOPROVIDER.com.cordova.plugins.push.baidu"
        android:protectionLevel="signature" />
    <!-- Push service 运行的可选权限 -->
    <uses-permission android:name="android.permission.RECEIVE_BOOT_COMPLETED" />
    <!-- Push service 运行需要的权限 END -->

    <!-- 小米代理运行需要的权限 -->
    <uses-permission android:name="android.permission.INTERNET" />
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
    <uses-permission android:name="android.permission.ACCESS_WIFI_STATE" />
    <uses-permission android:name="android.permission.READ_PHONE_STATE" />
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
    <uses-permission android:name="android.permission.GET_TASKS" />
    <uses-permission android:name="android.permission.VIBRATE" />
    <!-- 此处com.baidu.push.example要改成应用自己的包名 -->
    <permission
        android:name="com.cordova.plugins.push.baidu.permission.MIPUSH_RECEIVE"
        android:protectionLevel="signature" />
    <uses-permission android:name="com.cordova.plugins.push.baidu.permission.MIPUSH_RECEIVE" />
    <!-- 小米代理运行需要的权限 END -->

    <!-- VIVO代理运行需要的权限 -->
    <uses-permission android:name="android.permission.INTERNET" />
    <!-- VIVO代理运行需要的权限 END -->
    </config-file>

    <config-file target="AndroidManifest.xml" parent="/manifest/application">

      <!-- push必须的组件声明  START -->


        <receiver
            android:name="com.baidu.android.pushservice.PushServiceReceiver"
            android:process=":bdservice_v1">
            <intent-filter>
                <action android:name="com.baidu.android.pushservice.action.notification.SHOW" />

                <!-- 以下六项为可选的action声明，可大大提高service存活率和消息到达速度 -->
                <action android:name="android.intent.action.BOOT_COMPLETED" />
                <action android:name="android.net.conn.CONNECTIVITY_CHANGE" />
                <action android:name="android.intent.action.MEDIA_MOUNTED" />
                <action android:name="android.intent.action.USER_PRESENT" />
                <action android:name="android.intent.action.ACTION_POWER_CONNECTED" />
                <action android:name="android.intent.action.ACTION_POWER_DISCONNECTED" />
            </intent-filter>
        </receiver>

        <receiver
            android:name="com.baidu.android.pushservice.RegistrationReceiver"
            android:process=":bdservice_v1">
            <intent-filter>
                <action android:name="com.baidu.android.pushservice.action.METHOD" />
            </intent-filter>
        </receiver>

        <service
            android:name="com.baidu.android.pushservice.PushService"
            android:exported="true"
            android:process=":bdservice_v1">
            <intent-filter>
                <action android:name="com.baidu.android.pushservice.action.PUSH_SERVICE" />
            </intent-filter>
        </service>

        <service
            android:name="com.baidu.android.pushservice.CommandService"
            android:exported="true" />

        <provider
            android:name="com.baidu.android.pushservice.PushInfoProvider"
            android:authorities="com.cordova.plugins.push.baidu.bdpush"
            android:exported="true"
            android:process=":bdservice_v1"
            android:protectionLevel="signature"
            android:writePermission="baidu.push.permission.WRITE_PUSHINFOPROVIDER.com.cordova.plugins.push.baidu" />
		<receiver android:name="com.cordova.plugins.push.baidu.BaiduPushReceiver">
            <intent-filter>
                <action android:name="com.baidu.android.pushservice.action.MESSAGE" />
                <action android:name="com.baidu.android.pushservice.action.RECEIVE" />
                <action android:name="com.baidu.android.pushservice.action.notification.CLICK" />

                <!-- 使用华为代理功能必须声明,用于接收华为的透传 -->
                <action android:name="com.huawei.android.push.intent.RECEIVE" />
            </intent-filter>
        </receiver>
        <service
            android:name="com.baidu.android.pushservice.job.PushJobService"
            android:permission="android.permission.BIND_JOB_SERVICE"
            android:process=":bdservice_v1" />
        <!-- push必须的组件声明  END -->

        <!-- 华为代理推送必需组件 -->
        <activity
            android:name="com.baidu.android.pushservice.hwproxy.HwNotifyActivity"
            android:exported="true"
            android:launchMode="singleTask"
            android:theme="@android:style/Theme.NoDisplay">
            <intent-filter>
                <action android:name="android.intent.action.VIEW" />

                <category android:name="android.intent.category.DEFAULT" />

                <data
                    android:host="bdpush"
                    android:path="/hwnotify"
                    android:scheme="baidupush" />
            </intent-filter>
        </activity>

        <!-- 华为HMS接入声明service start -->
        <service
            android:name="com.baidu.android.pushservice.HmsPushPatchMessageService"
            android:exported="false">
            <intent-filter>
                <action android:name="com.huawei.push.action.MESSAGING_EVENT" />
            </intent-filter>
        </service>
        <!-- 华为代理推送必需组件 END -->

        <!-- 小米代理推送必需组件 -->
        <service
            android:name="com.xiaomi.push.service.XMPushService"
            android:enabled="true"
            android:process=":pushservice" />

        <!--注：此service必须在3.0.1版本以后（包括3.0.1版本）加入-->
        <service
            android:name="com.xiaomi.push.service.XMJobService"
            android:enabled="true"
            android:exported="false"
            android:permission="android.permission.BIND_JOB_SERVICE"
            android:process=":pushservice" />

        <service
            android:name="com.xiaomi.mipush.sdk.PushMessageHandler"
            android:enabled="true"
            android:exported="true" />

        <!--注：此service必须在2.2.5版本以后（包括2.2.5版本）加入-->
        <service
            android:name="com.xiaomi.mipush.sdk.MessageHandleService"
            android:enabled="true" />
        <receiver
            android:name="com.xiaomi.push.service.receivers.NetworkStatusReceiver"
            android:exported="true">
            <intent-filter>
                <action android:name="android.net.conn.CONNECTIVITY_CHANGE" />
                <category android:name="android.intent.category.DEFAULT" />
            </intent-filter>
        </receiver>

        <receiver
            android:name="com.xiaomi.push.service.receivers.PingReceiver"
            android:exported="false"
            android:process=":pushservice">
            <intent-filter>
                <action android:name="com.xiaomi.push.PING_TIMER" />
            </intent-filter>
        </receiver>

        <receiver android:name="com.baidu.android.pushservice.PushPatchMessageReceiver">
            <intent-filter>
                <action android:name="com.xiaomi.mipush.RECEIVE_MESSAGE" />
                <action android:name="com.xiaomi.mipush.MESSAGE_ARRIVED" />
                <action android:name="com.xiaomi.mipush.ERROR" />
            </intent-filter>
        </receiver>
        <!-- 小米代理推送必需组件 END -->


        <!-- 魅族代理推送必需组件 -->
        <activity
            android:name="com.baidu.android.pushservice.mzproxy.MzNotifyActivity"
            android:launchMode="singleTask"
            android:theme="@android:style/Theme.NoDisplay" />

        <receiver android:name="com.baidu.android.pushservice.MzPushPatchMessageReceiver">
            <intent-filter>
                <action android:name="com.meizu.flyme.push.intent.MESSAGE" />
                <action android:name="com.meizu.flyme.push.intent.REGISTER.FEEDBACK" />
                <action android:name="com.meizu.flyme.push.intent.UNREGISTER.FEEDBACK" />
            </intent-filter>
        </receiver>
        <!-- 魅族代理推送必需组件 END -->


        <!-- OPPO代理推送必需组件, 注意将com.baidu.push.example替换成自己的应用包名 -->
        <activity
            android:name="com.baidu.android.pushservice.opproxy.OpNotifyActivity"
            android:configChanges="orientation|keyboardHidden"
            android:exported="true"
            android:launchMode="singleInstance"
            android:theme="@android:style/Theme.NoDisplay">
            <intent-filter>
                <action android:name="com.cordova.plugins.push.baidu.action.RECEIVE_MCS_MESSAGE" />

                <category android:name="android.intent.category.DEFAULT" />
            </intent-filter>
        </activity>
        <!-- OPPO代理推送必需组件 END -->


        <!-- VIVO代理推送必需组件 -->
        <service
            android:name="com.vivo.push.sdk.service.CommandClientService"
            android:exported="true" />

        <receiver android:name="com.baidu.android.pushservice.viproxy.ViPushMessageReceiver">
            <intent-filter>
                <action android:name="com.vivo.pushclient.action.RECEIVE" />
            </intent-filter>
        </receiver>
    </config-file>

    <source-file src="src/android/BaiduPush.java" target-dir="src/com/cordova/plugins/push/baidu" />
    <source-file src="src/android/BaiduPushReceiver.java" target-dir="src/com/cordova/plugins/push/baidu" />
    <source-file src="libs/android/arm64-v8a/libbdpush_V3_8.so" target-dir="libs/arm64-v8a" />
    <source-file src="libs/android/armeabi/libbdpush_V3_8.so" target-dir="libs/armeabi" />
    <source-file src="libs/android/armeabi-v7a/libbdpush_V3_8.so" target-dir="libs/armeabi-v7a" />
    <source-file src="libs/android/mips/libbdpush_V3_4.so" target-dir="libs/mips" />
    <source-file src="libs/android/mips64/libbdpush_V3_4.so" target-dir="libs/mips64" />
    <source-file src="libs/android/x86/libbdpush_V3_4.so" target-dir="libs/x86" />
    <source-file src="libs/android/x86_64/libbdpush_V3_4.so" target-dir="libs/x86_64" />
    <source-file src="libs/android/pushservice-8.3.68.0.jar" target-dir="libs" />
  </platform>

    <!-- ios -->
    <platform name="ios">
        <config-file target="config.xml" parent="/*">
            <feature name="BaiduPush">
                <param name="ios-package" value="BaiduPushPlugin"/>
            </feature>
        </config-file>

        <header-file src="src/ios/BaiduPushPlugin.h" />
        <source-file src="src/ios/BaiduPushPlugin.m" />

      <!-- Wechat Official -->
      <header-file src="libs/ios/BPush.h" />
      <source-file src="libs/ios/libBPush.a" framework="true" />

      <!-- Other required frameworks -->
      <framework src="libz.dylib" />
      <framework src="Foundation.framework" />
      <framework src="CoreTelephony.framework" />
      <framework src="SystemConfiguration.framework" />

    </platform>
</plugin>
